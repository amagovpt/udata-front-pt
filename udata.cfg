# -*- coding: utf-8 -*-
from __future__ import unicode_literals
import os
from dotenv import load_dotenv

# # Carrega variáveis de ambiente do ficheiro .env, se existir.
# # A biblioteca python-dotenv (>=1.2.1) procurará o .env automaticamente.
load_dotenv()

# Função auxiliar para converter strings de env para booleano
def get_env_bool(var_name, default=False):
    val = os.getenv(var_name, str(default))
    return val.lower() in ('true', '1', 'yes')

################################# Configurações Básicas #################################
# Configura se o modo de debug está ativo.
DEBUG = get_env_bool('DEBUG')

# Identificador único do portal.
SITE_ID = os.getenv('SITE_ID')
# Título do portal.
SITE_TITLE = 'dados.gov - Plataforma aberta de dados abertos da Administração Pública'
# Autor do portal.
SITE_AUTHOR = 'dados.gov'
# Nome do servidor.
SERVER_NAME = os.getenv('SERVER_NAME')
# URL base para a migração.
MIGRATION_URL = f'http://{SERVER_NAME}/pt/'

# calcula o número de segundos numa hora
HOUR = 60 * 60

################################# Cookies de Sessão #################################
# Domínio para os cookies de sessão.
SESSION_COOKIE_DOMAIN = SERVER_NAME
# Força o uso de HTTPS para os cookies de sessão - True (para HTTPS).
SESSION_COOKIE_SECURE = get_env_bool('SESSION_COOKIE_SECURE') # Local manter como false - erro CSRF com True ou comentado


################################# Segurança e Monitorização #################################
# Endereço para onde os erros são enviados.
SENTRY_DSN = os.getenv('SENTRY_DSN')
# Ambiente da aplicação (teste, produção, etc.).
SENTRY_ENVIRONMENT = os.getenv('SENTRY_ENVIRONMENT')


################################# IP Services #################################
# IP do servidor MongoDB.
SERVER_MONGO = os.getenv('SERVER_MONGO')
# IP do servidor Redis.
SERVER_REDIS = os.getenv('SERVER_REDIS')
# # IP do servidor Elasticsearch.
# SERVER_ELASTICSEARCH = os.getenv('SERVER_ELASTICSEARCH')


################################# MongoDB & Elasticsearch #################################
# URL de conexão ao MongoDB.
MONGODB_HOST = f'mongodb://{SERVER_MONGO}:27017/udata'
# # URL da API do serviço de pesquisa.
# SEARCH_SERVICE_API_URL = 'http://{SERVER_ELASTICSEARCH}:5000/api/1/'


################################# Redis & Cache #################################
# Tipo de backend de cache.
CACHE_TYPE = 'redis'
# URL para o cache em Redis.
CACHE_REDIS_URL = f'redis://{SERVER_REDIS}:6379/2'


################################# Celery #################################
# URL do broker de mensagens do Celery.
BROKER_URL = f'redis://{SERVER_REDIS}:6379/0'
# URL do broker de mensagens do Celery (alias para BROKER_URL).
CELERY_BROKER_URL = BROKER_URL
# Backend para guardar os resultados das tarefas do Celery.
CELERY_RESULT_BACKEND = f'redis://{SERVER_REDIS}:6379/1' 
# Tempo de expiração dos resultados das tarefas em segundos.
CELERY_TASK_RESULT_EXPIRES = 86400
# Desativa a captura do logger principal pelo Celery.
CELERY_WORKER_HIJACK_ROOT_LOGGER = False


################################# Idiomas #################################
# Idiomas disponíveis no portal.
LANGUAGES = {
    'pt': 'Português',
    'en': 'English',
    'fr': 'Français',
    'es': 'Español',
}
# Idioma padrão do portal.
DEFAULT_LANGUAGE = 'pt'


################################# Plugins #################################
# Lista de plugins ativados.
PLUGINS = (
    'front',
    'piwik',
    'gouvfr_saml',
    'gouvfr_faqs',
    'ckanpt',
    'ckan',
    'odspt',
    'dcat',
    'ine',
    'apambiente',
    'ods',
    'dgt',
    'metrics',
    # 'tabular',
    'dgtIne', 
)
# Adiciona mais plugins à lista.
PLUGINS += ('gouvpt_checker', 'gouvpt_tasks')
# Plugin padrão para verificação de links.
LINKCHECKING_DEFAULT_LINKCHECKER = 'gouvpt_checker'
# Número de falhas para marcar um link como indisponível.
LINKCHECKING_UNAVAILABLE_THRESHOLD = 10

# Ativa o suporte para dados de alto valor (HVD).
HVD_SUPPORT = True


################################# Tema & Ficheiros #################################
# Tema visual do portal.
THEME = 'gouvfr'
# Caminho para armazenamento de ficheiros.
FS_ROOT = '/udata-front-pt/fs/'
# Prefixo da URL para acesso aos ficheiros.
FS_PREFIX = '/s'


################################# Tabular Preview #################################
# Ativa a pré-visualização de dados tabulares.
TABULAR_PREVIEW_ENABLED = True
# URL da API do serviço tabular.
TABULAR_API_URL = os.getenv('TABULAR_API_URL')
# URL do frontend de exploração de dados tabulares.
TABULAR_EXPLORE_URL = os.getenv('TABULAR_EXPLORE_URL')
# Permite a análise de recursos externos.
TABULAR_ALLOW_REMOTE = True
# Número de linhas por página na pré-visualização.
TABULAR_PAGE_SIZE = 10


################################# Hydra (Análise de Eventos) #################################
# Ativa a publicação de eventos de recursos.
PUBLISH_ON_RESOURCE_EVENTS = True
# URL do serviço de análise de recursos (Hydra).
RESOURCES_ANALYSER_URI = os.getenv('RESOURCES_ANALYSER_URI')
# Chave de API para autenticação no serviço de análise.
RESOURCES_ANALYSER_API_KEY = os.getenv('RESOURCES_ANALYSER_API_KEY')


################################# Autenticação SAML #################################
# ID da entidade SAML do portal.
SECURITY_SAML_ENTITY_ID = os.getenv('SECURITY_SAML_ENTITY_ID')
# Nome da entidade SAML.
SECURITY_SAML_ENTITY_NAME = os.getenv('SECURITY_SAML_ENTITY_NAME')
# Caminho para a chave privada SAML.
SECURITY_SAML_KEY_FILE = os.getenv('SECURITY_SAML_KEY_FILE')
# Caminho para o certificado SAML.
SECURITY_SAML_CERT_FILE = os.getenv('SECURITY_SAML_CERT_FILE')
# Caminho para os metadados do provedor de identidade.
SECURITY_SAML_IDP_METADATA = os.getenv('SECURITY_SAML_IDP_METADATA')
# Nível de autenticação SAML.
SECURITY_SAML_FAAALEVEL = os.getenv('SECURITY_SAML_FAAALEVEL')
# URL do serviço de autenticação.
SECURITY_SAML_FA_URL = os.getenv('SECURITY_SAML_FA_URL')


################################# Configurações de E-mail #################################
# Endereço do servidor de e-mail.
MAIL_SERVER = os.getenv('MAIL_SERVER')
# E-mail padrão do remetente.
MAIL_DEFAULT_SENDER = os.getenv('MAIL_DEFAULT_SENDER')
# E-mail padrão do destinatário.
MAIL_DEFAULT_RECEIVER = os.getenv('MAIL_DEFAULT_RECEIVER')
# Porta do servidor de e-mail.
MAIL_PORT = os.getenv('MAIL_PORT')
# Usa TLS para e-mail.
MAIL_USE_TLS = get_env_bool('MAIL_USE_TLS')
# Usa SSL para e-mail.
MAIL_USE_SSL = get_env_bool('MAIL_USE_SSL')
# Tempo de expiração da confirmação de e-mail.
SECURITY_CONFIRM_EMAIL_WITHIN = 120 * HOUR
# Tempo de expiração da recuperação de palavra-passe.
SECURITY_RESET_PASSWORD_WITHIN = 120 * HOUR


################################# reCAPTCHA #################################
# Chave pública do reCAPTCHA.
RECAPTCHA_PUBLIC_KEY = os.getenv('RECAPTCHA_PUBLIC_KEY')
# Chave privada do reCAPTCHA.
RECAPTCHA_PRIVATE_KEY = os.getenv('RECAPTCHA_PRIVATE_KEY')
# Atributos de dados adicionais para o reCAPTCHA.
RECAPTCHA_DATA_ATTRS = {'callback': 'enableBtn'}


################################# Ficheiros Permitidos #################################
# Extensões de ficheiro permitidas para upload.
ALLOWED_RESOURCES_EXTENSIONS = [
    # Base
    'csv', 'txt', 'json', 'pdf', 'xml', 'rdf', 'rtf', 'xsd',
    # OpenOffice
    'ods', 'odt', 'odp', 'odg',
    # Microsoft Office
    'xls', 'xlsx', 'doc', 'docx', 'pps', 'ppt',
    # Archives
    'tar', 'gz', 'tgz', 'rar', 'zip', '7z', 'xz', 'bz2',
    # Images
    'jpeg', 'jpg', 'jpe', 'gif', 'png', 'dwg', 'tiff', 'ecw', 'jp2',
    # Geo
    'shp', 'kml', 'kmz', 'gpx', 'shx', 'ovr', 'geojson',
    # Meteorology
    'grib2',
    # Misc
    'dbf', 'prj', 'sql', 'epub', 'sbn', 'sbx', 'cpg', 'lyr', 'owl', 'gpkg',
]


################################# Segurança de Palavra-passe #################################
# Comprimento mínimo da palavra-passe.
SECURITY_PASSWORD_LENGTH_MIN = os.getenv('SECURITY_PASSWORD_LENGTH_MIN')
# Exige letra minúscula.
SECURITY_PASSWORD_REQUIREMENTS_LOWERCASE = os.getenv('SECURITY_PASSWORD_REQUIREMENTS_LOWERCASE')
# Exige dígito.
SECURITY_PASSWORD_REQUIREMENTS_DIGITS = os.getenv('SECURITY_PASSWORD_REQUIREMENTS_DIGITS')
# Exige letra maiúscula.
SECURITY_PASSWORD_REQUIREMENTS_UPPERCASE = os.getenv('SECURITY_PASSWORD_REQUIREMENTS_UPPERCASE')
# Exige símbolo.
SECURITY_PASSWORD_REQUIREMENTS_SYMBOLS = os.getenv('SECURITY_PASSWORD_REQUIREMENTS_SYMBOLS')


################################# Mensagens de Segurança #################################
# See https://flask-security.readthedocs.io/en/stable/configuration.html#SECURITY_REDIRECT_BEHAVIOR
# Mensagem de utilizador não encontrado.
SECURITY_MSG_USER_DOES_NOT_EXIST = ("A informação inserida está incorreta", "error")
# Mensagem de palavra-passe incorreta.
SECURITY_MSG_INVALID_PASSWORD = ("A informação inserida está incorreta", "error")
# Mensagem de recuperação de palavra-passe.
SECURITY_MSG_PASSWORD_RESET_REQUEST = ("As instruções para redefinir a sua senha foram enviadas para o seu email.", "info")
# Mensagem de conta desativada.
SECURITY_MSG_DISABLED_ACCOUNT = ("A informação inserida está incorreta", "error")
# Mensagem de e-mail já confirmado.
SECURITY_MSG_ALREADY_CONFIRMED = ("A informação inserida está incorreta", "error")
# Mensagem de pedido de confirmação de e-mail.
SECURITY_MSG_CONFIRMATION_REQUEST = ("As instruções de confirmação foram enviadas para o seu email.", "error")


################################# Tags #################################
# Comprimento mínimo de uma tag.
TAG_MIN_LENGTH = os.getenv('TAG_MIN_LENGTH')
# Comprimento máximo de uma tag.
TAG_MAX_LENGTH = os.getenv('TAG_MAX_LENGTH')


################################# Exportação & Modo de Leitura #################################
# ID do conjunto de dados para exportação CSV.
EXPORT_CSV_DATASET_ID = get_env_bool('EXPORT_CSV_DATASET_ID')
# Ativa o modo de somente leitura.
READ_ONLY_MODE = get_env_bool('READ_ONLY_MODE')


################################# #################################
# IDs para rastreamento no Piwik.
PIWIK_ID_FRONT = os.getenv('PIWIK_ID_FRONT')
PIWIK_ID_API = os.getenv('PIWIK_ID_API')
PIWIK_ID = os.getenv('PIWIK_ID')
# Protocolo do Piwik.
PIWIK_SCHEME = os.getenv('PIWIK_SCHEME')
# URL do servidor Piwik.
PIWIK_URL = os.getenv('PIWIK_URL') 
# Token de autenticação do Piwik.
PIWIK_AUTH = os.getenv('PIWIK_AUTH')
# URL da API de métricas.
METRICS_API = os.getenv('METRICS_API')

# Mapeamento de eventos para metas do Piwik.
PIWIK_GOALS = {
    'NEW_DATASET': 1,
    'NEW_REUSE': 2,
    'NEW_FOLLOW': 3,
    'SHARE': 4,
    'RESOURCE_DOWNLOAD': 5,
    'RESOURCE_REDIRECT': 6,
}

# Timeout para rastreamento de eventos.
PIWIK_TRACK_TIMEOUT = 60
# Timeout para análise de métricas.
PIWIK_ANALYZE_TIMEOUT = 60 * 5
# Modo de rastreamento de conteúdo.
PIWIK_CONTENT_TRACKING = 'all'


################################# Funcionalidades do Portal & Mapa #################################
# URL dos termos de uso do portal.
SITE_TERMS_LOCATION = "https://raw.githubusercontent.com/amagovpt/docs.dados.gov.pt/master/faqs/terms.md"

# Ativa a funcionalidade de territórios.
ACTIVATE_TERRITORIES = True
# Níveis territoriais suportados.
HANDLED_LEVELS = ('pt:freguesia', 'pt:concelho', 'pt:distrito')

# Configurações do mapa
# Centro inicial do mapa.
MAP_INITIAL_CENTER = [38, -17]
# Zoom inicial do mapa.
MAP_INITIAL_ZOOM = 5
# Nível inicial do mapa.
MAP_INITIAL_LEVEL = 2
# Ativa a funcionalidade de discussões.
POST_DISCUSSIONS_ENABLED = True

# Modo de pré-visualização de recursos.
PREVIEW_MODE = 'iframe'