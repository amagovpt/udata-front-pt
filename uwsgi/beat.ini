##
# uWSGI configuration for udata celery beat
# Este processo é o agendador central do Celery (Celery Beat). 
# Ele lê a lista de tarefas recorrentes definidas na configuração do 
# uData (como os harvesters de dados) e, 
# no horário correto, coloca-as na fila de tarefas para que os workers as executem. 
# É fundamental que apenas uma instância deste processo esteja em execução 
# para evitar que as tarefas sejam agendadas e executadas de forma duplicada.
##

[uwsgi]
; Ativa o modo mestre uWSGI.
master = true
; Define o número de processos do uWSGI (neste caso, 1). Este processo gerencia o Celery.
processes = 1
; Define as variáveis de ambiente para o Celery, permitindo a execução como root e a localização do ficheiro de configuração.
env = C_FORCE_ROOT=true,UDATA_SETTINGS=/opt/udata/udata-front-pt/udata.cfg 

; Inicia e monitoriza o Celery worker. Se o processo parar, o uWSGI reinicia-o.
smart-attach-daemon = /tmp/celery-beat.pid celery -A udata.worker beat --pidfile=/tmp/celery-beat.pid
; Garante que o processo Celery é encerrado corretamente quando o uWSGI é desligado.
exec-as-user-atexit = kill -TERM `cat /tmp/celery-beat.pid`

; Harakiri preventivo
; Encerra workers que estejam a demorar mais de 300 segundos a responder.
harakiri = 300

; Logging configuration
; Define o nível de detalhe do log.
log-level = info
; Permite que o processo mestre do uWSGI gere logs.
log-master = true
; Inicia o uWSGI como um daemon e redireciona a saída principal para este ficheiro.
daemonize = /logs/app.logs
; Redireciona mensagens de erro específicas para este ficheiro.
logto = /logs/errors.logs
; Regista erros HTTP 5xx que possam ocorrer.
log-5xx = true

